"""haha

Revision ID: 238dd9b521ca
Revises: 5bcf0f70d500
Create Date: 2025-05-01 17:08:41.265159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '238dd9b521ca'
down_revision: Union[str, None] = '5bcf0f70d500'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('district', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('pincode', sa.String(length=6), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_address_id'), 'user_address', ['id'], unique=False)
    op.drop_index('ix_user-address_id', table_name='user-address')
    op.drop_table('user-address')
    op.drop_constraint('admins_email_key', 'admins', type_='unique')
    op.create_index(op.f('ix_admins_email'), 'admins', ['email'], unique=True)
    op.add_column('booking_address', sa.Column('country', sa.String(), nullable=False))
    op.drop_column('booking_address', 'contry')
    op.add_column('provider_addresses', sa.Column('country', sa.String(), nullable=False))
    op.drop_column('provider_addresses', 'contry')
    op.create_index(op.f('ix_service_providers_email'), 'service_providers', ['email'], unique=False)
    op.create_index(op.f('ix_service_providers_mobile'), 'service_providers', ['mobile'], unique=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_mobile_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_mobile'), 'users', ['mobile'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_mobile'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_mobile_key', 'users', ['mobile'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_index(op.f('ix_service_providers_mobile'), table_name='service_providers')
    op.drop_index(op.f('ix_service_providers_email'), table_name='service_providers')
    op.add_column('provider_addresses', sa.Column('contry', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('provider_addresses', 'country')
    op.add_column('booking_address', sa.Column('contry', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('booking_address', 'country')
    op.drop_index(op.f('ix_admins_email'), table_name='admins')
    op.create_unique_constraint('admins_email_key', 'admins', ['email'])
    op.create_table('user-address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contry', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pincode', sa.VARCHAR(length=6), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('label', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user-address_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user-address_pkey')
    )
    op.create_index('ix_user-address_id', 'user-address', ['id'], unique=False)
    op.drop_index(op.f('ix_user_address_id'), table_name='user_address')
    op.drop_table('user_address')
    # ### end Alembic commands ###
