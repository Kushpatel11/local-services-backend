"""Add tables for booking system

Revision ID: 87f63c8fdcec
Revises: 546a0d34d8f7
Create Date: 2025-04-28 12:43:00.070446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '87f63c8fdcec'
down_revision: Union[str, None] = '546a0d34d8f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=100), nullable=False),
    sa.Column('action_details', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_logs_id'), 'admin_logs', ['id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('service_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_provider_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.String(length=5), nullable=False),
    sa.Column('end_time', sa.String(length=5), nullable=False),
    sa.ForeignKeyConstraint(['service_provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_schedules_id'), 'service_schedules', ['id'], unique=False)
    op.create_table('admin_approvals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_approvals_id'), 'admin_approvals', ['id'], unique=False)
    op.create_table('payment_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('payment_status', sa.String(length=50), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_records_id'), 'payment_records', ['id'], unique=False)
    op.create_table('service_provider_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('review', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_provider_reviews_id'), 'service_provider_reviews', ['id'], unique=False)
    op.add_column('bookings', sa.Column('address', sa.String(), nullable=True))
    op.add_column('providers', sa.Column('bio', sa.String(length=255), nullable=True))
    op.add_column('providers', sa.Column('rating', sa.Float(), nullable=True))
    op.add_column('providers', sa.Column('availability_schedule', sa.String(), nullable=True))
    op.alter_column('providers', 'email',
               existing_type=sa.VARCHAR(length=150),
               nullable=False)
    op.alter_column('services', 'price',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
    op.add_column('users', sa.Column('role', sa.String(length=50), nullable=False))
    op.add_column('users', sa.Column('location_coordinates', sa.String(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'location_coordinates')
    op.drop_column('users', 'role')
    op.alter_column('services', 'price',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('providers', 'email',
               existing_type=sa.VARCHAR(length=150),
               nullable=True)
    op.drop_column('providers', 'availability_schedule')
    op.drop_column('providers', 'rating')
    op.drop_column('providers', 'bio')
    op.drop_column('bookings', 'address')
    op.drop_index(op.f('ix_service_provider_reviews_id'), table_name='service_provider_reviews')
    op.drop_table('service_provider_reviews')
    op.drop_index(op.f('ix_payment_records_id'), table_name='payment_records')
    op.drop_table('payment_records')
    op.drop_index(op.f('ix_admin_approvals_id'), table_name='admin_approvals')
    op.drop_table('admin_approvals')
    op.drop_index(op.f('ix_service_schedules_id'), table_name='service_schedules')
    op.drop_table('service_schedules')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_admin_logs_id'), table_name='admin_logs')
    op.drop_table('admin_logs')
    # ### end Alembic commands ###
